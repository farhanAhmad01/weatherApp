{"version":3,"file":"static/js/508.d19f707c.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/CardBody.js","../node_modules/react-bootstrap/esm/CardFooter.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardImgOverlay.js","../node_modules/react-bootstrap/esm/CardLink.js","../node_modules/react-bootstrap/esm/CardSubtitle.js","../node_modules/react-bootstrap/esm/CardText.js","../node_modules/react-bootstrap/esm/CardTitle.js","../node_modules/react-bootstrap/esm/Card.js","components/WeatherMiniCard.js","util/converter.js","components/WeatherCard.js"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useContext } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport \"../assets/main.css\";\nimport { WeatherDataContext } from \"../context/weatherDataContext\";\n\nconst MiniCard = ({ icon, text, cdata, unit }) => {\n  const { state } = useContext(WeatherDataContext);\n  return (\n    <Card\n      className={state.dark ? \"card-dark\" : \"card-light\"}\n      style={{ width: \"60%\", backgroundColor: \"transparent\" }}\n    >\n      <Card.Text>\n        <FontAwesomeIcon icon={icon} fade /> <b>{text} </b>{\" \"}\n      </Card.Text>\n      <Card.Text>\n        <b>\n          {cdata} {unit}\n        </b>\n      </Card.Text>\n    </Card>\n  );\n};\n\nexport default MiniCard;\n","export const farenheittoCelcius=(temp)=>{\n    return (5/9)*Number(temp-32);\n}\nexport const celciusToFarenheit = (temp)=>{\n    return ((9/5)*Number(temp)+32).toFixed(2);\n}","import React, { useContext, useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"../assets/main.css\";\nimport {\n  faLocation,\n  faRefresh,\n  faTemperature0,\n  faTemperature2,\n  faTemperatureHigh,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { farefresh, faC, faF } from \"@fortawesome/free-solid-svg-icons\";\nimport { faWind } from \"@fortawesome/free-solid-svg-icons\";\nimport { faGaugeSimpleMed } from \"@fortawesome/free-solid-svg-icons\";\nimport { faDroplet } from \"@fortawesome/free-solid-svg-icons\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport MiniCard from \"./WeatherMiniCard\";\nimport { useState } from \"react\";\nimport { celciusToFarenheit } from \"../util/converter\";\nimport { WeatherDataContext } from \"../context/weatherDataContext\";\nimport \"../assets/card.css\";\nimport defaultImg from \"../assets/img/default.jpg\";\nimport clearImg from \"../assets/img/clear.jpg\";\nimport snowImg from \"../assets/img/snow.jpg\";\nimport rainImg from \"../assets/img/rain.jpg\";\nimport cloudImg from \"../assets/img/cloud.jpg\";\nimport smokeImg from \"../assets/img/smoke.jpg\";\nimport fogImg from \"../assets/img/fog.jpg\";\nimport Switch from \"react-switch\";\n\nconst WeatherCard = ({ data }) => {\n  const { state } = useContext(WeatherDataContext);\n  const [farenheit, setFarenheit] = useState(false);\n  const [background, setBackground] = useState(defaultImg);\n\n  useEffect(() => {\n    if (data.weather) {\n      updateBackground();\n    }\n  }, [data]);\n\n  const updateBackground = () => {\n    const weatherCondition = data.weather[0].main;\n\n    // Define background images for different weather conditions\n    const backgrounds = {\n      Clear: clearImg,\n      Rain: rainImg,\n      Snow: snowImg,\n      Clouds: cloudImg,\n      Fog: fogImg,\n      Smoke: smokeImg,\n      Haze: smokeImg,\n      Mist: fogImg,\n      Thunderstorm: \"thunderstorm.jpg\",\n      // Add more as needed\n    };\n\n    // Set the background based on the weather condition\n    setBackground(backgrounds[weatherCondition] || defaultImg);\n  };\n\n  const refresh = () => {\n    window.location.reload();\n  };\n  const convertTemp = () => {\n    if (farenheit) {\n      setFarenheit(false);\n    } else {\n      setFarenheit(true);\n    }\n  };\n  return (\n    <Card\n      className={state.dark ? \"card-dark\":\"card-light\"  }\n      style={{ width: \"80%\", backgroundImage: `url(${background})` }}\n    >\n      <div className=\"container-card\">\n        <div className=\"column\">\n          <div className=\"image-card\">\n            <img\n              src={`https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`}\n              alt=\"Images\"\n            />\n          </div>\n          {/* <p>{data.weather[0].main}</p> */}\n          <h3 className={state.dark ? \"styled-text-dark\" : \"styled-text-light\"}>\n            {data.weather[0].description.toUpperCase()}\n          </h3>\n          <h1 className={state.dark ? \"styled-text-dark\" : \"styled-text-light\"}>\n            {farenheit ? celciusToFarenheit(data.main.temp) : data.main.temp}\n            {farenheit ? \"°F\" : \"°C\"}\n          </h1>\n          <h6 className={state.dark ? \"styled-text-dark\" : \"styled-text-light\"}>\n            <b>\n              {data.name},{data.sys.country}\n            </b>\n          </h6>\n          <Switch\n            checked={farenheit ? true : false}\n            checkedIcon={\n              <FontAwesomeIcon\n                style={{ color: \"#fff\", padding: 8 }}\n                icon={faC}\n              />\n            }\n            onHandleColor=\"#fff\"\n            offHandleColor=\"#000\"\n            offColor=\"#fff\"\n            onColor=\"#000\"\n            uncheckedIcon={\n              <FontAwesomeIcon\n                style={{ color: \"#000\", padding: 8 }}\n                icon={faF}\n              />\n            }\n            onChange={() => convertTemp()}\n          />\n        </div>\n\n        <div className=\"column second\">\n          <div className=\"column-c\">\n            <MiniCard\n              style={{ backgroundImage: `url(${background})` }}\n              icon={faTemperatureHigh}\n              text=\"Maximum: \"\n              cdata={\n                farenheit\n                  ? celciusToFarenheit(data.main.temp_max)\n                  : data.main.temp_max\n              }\n              unit={farenheit ? \"°F\" : \"°C\"}\n            />\n            <MiniCard\n              icon={faLocation}\n              text=\"Latitude: \"\n              cdata={data.coord.lat}\n            />\n            <MiniCard\n              icon={faGaugeSimpleMed}\n              text=\"Pressure: \"\n              cdata={data.main.pressure}\n              unit=\"Pa\"\n            />\n            <MiniCard\n              icon={faWind}\n              text=\"Wind Speed: \"\n              cdata={data.wind.speed}\n              unit=\"km/hr\"\n            />\n          </div>\n          <div className=\"column-c\">\n            <MiniCard\n              icon={faTemperature0}\n              text=\"Minimum: \"\n              cdata={\n                farenheit\n                  ? celciusToFarenheit(data.main.temp_min)\n                  : data.main.temp_min\n              }\n              unit={farenheit ? \"°F\" : \"°C\"}\n            />\n            <MiniCard\n              icon={faLocation}\n              text=\"Longitude: \"\n              cdata={data.coord.lon}\n            />\n            <MiniCard\n              icon={faTemperature2}\n              text=\"Feels Like: \"\n              cdata={\n                farenheit\n                  ? celciusToFarenheit(data.main.feels_like)\n                  : data.main.feels_like\n              }\n              unit={farenheit ? \"°F\" : \"°C\"}\n            />\n            <MiniCard\n              icon={faDroplet}\n              text=\"Humidity: \"\n              cdata={data.main.humidity}\n              unit=\"%\"\n            />\n          </div>\n          <button\n            className={\n              state.dark ? \"button button-dark\" : \"button button-light\"\n            }\n            onClick={refresh}\n          >\n            <FontAwesomeIcon icon={faRefresh} spin  />\n          </button>\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default WeatherCard;\n"],"names":["CardBody","React","_ref","ref","className","bsPrefix","as","Component","props","useBootstrapPrefix","_jsx","classNames","displayName","CardFooter","context","CardHeader","prefix","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","CardImg","variant","concat","CardImgOverlay","CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","Card","bg","text","border","body","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","icon","cdata","unit","state","useContext","WeatherDataContext","_jsxs","dark","style","width","backgroundColor","FontAwesomeIcon","fade","celciusToFarenheit","temp","Number","toFixed","data","farenheit","setFarenheit","useState","background","setBackground","defaultImg","useEffect","weather","updateBackground","weatherCondition","main","Clear","Rain","Snow","Clouds","Fog","fogImg","Smoke","smokeImg","Haze","Mist","Thunderstorm","backgroundImage","src","alt","description","toUpperCase","name","sys","country","Switch","checked","checkedIcon","color","padding","faC","onHandleColor","offHandleColor","offColor","onColor","uncheckedIcon","faF","onChange","MiniCard","faTemperatureHigh","temp_max","faLocation","coord","lat","faGaugeSimpleMed","pressure","faWind","wind","speed","faTemperature0","temp_min","lon","faTemperature2","feels_like","faDroplet","humidity","onClick","refresh","window","location","reload","faRefresh","spin"],"sourceRoot":""}